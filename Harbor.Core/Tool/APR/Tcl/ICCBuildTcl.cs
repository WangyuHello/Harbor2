// ------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本: 16.0.0.0
//  
//     对此文件的更改可能导致不正确的行为，如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Harbor.Core.Tool.APR.Tcl
{
    using System.Linq;
    using System.IO;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class ICCBuildTcl : ICCBuildTclBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n#自动生成的脚本\r\n#");
            
            #line 9 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(System.DateTime.Now));
            
            #line default
            #line hidden
            this.Write("\r\n\r\n#=====================设置变量======================\r\nset top_name         \"");
            
            #line 12 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.TopName));
            
            #line default
            #line hidden
            this.Write("\"\r\nset net_path         \"");
            
            #line 13 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Netlist));
            
            #line default
            #line hidden
            this.Write("\"\r\nset syn_net_path     \"");
            
            #line 14 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.SynNetlist));
            
            #line default
            #line hidden
            this.Write("\"\r\nset gds_path         \"");
            
            #line 15 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.GDSPath));
            
            #line default
            #line hidden
            this.Write("\"\r\nset rpt_path         \"");
            
            #line 16 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.RptPath));
            
            #line default
            #line hidden
            this.Write("\"\r\nset script_root_path \"");
            
            #line 17 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.ScriptRootPath));
            
            #line default
            #line hidden
            this.Write("\"\r\nset lib_path         \"");
            
            #line 18 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.LibPath));
            
            #line default
            #line hidden
            this.Write("\"\r\n\r\n");
            
            #line 20 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(string.IsNullOrEmpty(model.Power)) { 
            
            #line default
            #line hidden
            this.Write("set power_name       \"VDD\"\r\n");
            
            #line 22 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("set power_name       \"");
            
            #line 23 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Power));
            
            #line default
            #line hidden
            this.Write("\"\r\n");
            
            #line 24 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 25 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(string.IsNullOrEmpty(model.Ground)) { 
            
            #line default
            #line hidden
            this.Write("set ground_name      \"VSS\"\r\n");
            
            #line 27 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("set ground_name      \"");
            
            #line 28 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Ground));
            
            #line default
            #line hidden
            this.Write("\"\r\n");
            
            #line 29 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write("set MnTXTs           [dict create 1 ");
            
            #line 30 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.MnTXT1));
            
            #line default
            #line hidden
            this.Write(" 2 ");
            
            #line 30 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.MnTXT2));
            
            #line default
            #line hidden
            this.Write(" 3 ");
            
            #line 30 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.MnTXT3));
            
            #line default
            #line hidden
            this.Write(" 4 ");
            
            #line 30 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.MnTXT4));
            
            #line default
            #line hidden
            this.Write(" 5 ");
            
            #line 30 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.MnTXT5));
            
            #line default
            #line hidden
            this.Write(" 6 ");
            
            #line 30 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.MnTXT6));
            
            #line default
            #line hidden
            this.Write("]\r\n\r\nset search_path \"$script_root_path \\\r\n                 $lib_path         \\\r\n" +
                    "                \"\r\n\r\n#=====================设置工艺库======================\r\n\r\nset li" +
                    "b_name       \"");
            
            #line 38 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.LibName));
            
            #line default
            #line hidden
            this.Write("\"\r\nset target_library \"");
            
            #line 39 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.LibFullName));
            
            #line default
            #line hidden
            this.Write(" \\\r\n");
            
            #line 40 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var io_lib in model.IOTimingDbPaths) { 
            
            #line default
            #line hidden
            this.Write("                    ");
            
            #line 41 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(io_lib));
            
            #line default
            #line hidden
            this.Write(" \\\r\n");
            
            #line 42 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 43 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var addi_lib in model.AdditionalTimingDbPaths) { 
            
            #line default
            #line hidden
            this.Write("                    ");
            
            #line 44 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(addi_lib));
            
            #line default
            #line hidden
            this.Write(" \\\r\n");
            
            #line 45 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write("                   \"\r\nset link_library   \"");
            
            #line 47 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.LibFullName));
            
            #line default
            #line hidden
            this.Write(" \\\r\n");
            
            #line 48 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var io_lib in model.IOTimingDbPaths) { 
            
            #line default
            #line hidden
            this.Write("                    ");
            
            #line 49 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(io_lib));
            
            #line default
            #line hidden
            this.Write(" \\\r\n");
            
            #line 50 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 51 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var addi_lib in model.AdditionalTimingDbPaths) { 
            
            #line default
            #line hidden
            this.Write("                    ");
            
            #line 52 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(addi_lib));
            
            #line default
            #line hidden
            this.Write(" \\\r\n");
            
            #line 53 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write("                   \"\r\n");
            
            #line 55 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(!string.IsNullOrEmpty(model.StdCell.symbol_full_name)) { 
            
            #line default
            #line hidden
            this.Write("set symbol_library \"");
            
            #line 56 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.StdCell.symbol_full_name));
            
            #line default
            #line hidden
            this.Write("\"\r\n");
            
            #line 57 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write(@"
#====================Steps========================
# 1. init_design
# 2. place_opt
# 3. clock_opt_cts
# 4. clock_opt_psyn
# 5. clock_opt_route
# 6. route
# 7. route_opt
# 8. chip_finish
# 9. output


#====================1. init_design=====================

set_app_var rc_driver_model_mode advanced
set_app_var rc_receiver_model_mode advanced

create_mw_lib -technology ");
            
            #line 76 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.TechFilePath));
            
            #line default
            #line hidden
            this.Write(" -mw_reference_library { ");
            
            #line 76 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(" ", model.RefLibPath)));
            
            #line default
            #line hidden
            this.Write(" } -bus_naming_style {[%d]} -open $top_name\r\n# import_designs -format ddc -top $t" +
                    "op_name -cel $top_name { $syn_net_path/$top_name\\.ddc }\r\nread_verilog $syn_net_p" +
                    "ath/$top_name\\.v -dirty_netlist -top $top_name -cel $top_name\r\n");
            
            #line 79 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(!string.IsNullOrEmpty(model.TLUPMax)) { 
            
            #line default
            #line hidden
            this.Write("set_tlu_plus_files -max_tluplus ");
            
            #line 80 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.TLUPMax));
            
            #line default
            #line hidden
            this.Write(" -min_tluplus ");
            
            #line 80 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.TLUPMin));
            
            #line default
            #line hidden
            this.Write(" -tech2itf_map ");
            
            #line 80 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Tech2itfMap));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 81 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write(@"read_sdc -version Latest $syn_net_path/$top_name\.sdc

uniquify_fp_mw_cel
current_design 
link

if {[check_error -verbose] != 0} { exit 1 }
save_mw_cel -design $top_name -as ""$top_name\_init_design""

gui_zoom -window [gui_get_current_window -types Layout -mru] -full
gui_execute_events


#忽略PAD设置

remove_ideal_network -all
remove_propagated_clock [all_clocks]

");
            
            #line 100 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 
var pin_pad_tcl = "$script_root_path/pin_pad.tcl";
if(pinModel.ConstraintFile != null) {
    pin_pad_tcl = pinModel.ConstraintFile.FullPath;
} 
            
            #line default
            #line hidden
            this.Write("read_pin_pad_physical_constraints \"");
            
            #line 105 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pin_pad_tcl));
            
            #line default
            #line hidden
            this.Write("\"\r\n\r\nderive_pg_connection -power_net \"VDD\" -power_pin $power_name -ground_net \"VS" +
                    "S\" -ground_pin $ground_name\r\n# derive_pg_connection -verbose\r\n\r\n");
            
            #line 110 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"

switch (model.FloorPlanSettings.FloorPlanType)
{
    case FloorPlanType.AspectRatio:

            
            #line default
            #line hidden
            this.Write("create_floorplan \\\r\n    -control_type aspect_ratio \\\r\n    -left_io2core      ");
            
            #line 117 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.FloorPlanSettings.LeftIO2Core));
            
            #line default
            #line hidden
            this.Write(" \\\r\n    -bottom_io2core    ");
            
            #line 118 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.FloorPlanSettings.BottomIO2Core));
            
            #line default
            #line hidden
            this.Write(" \\\r\n    -right_io2core     ");
            
            #line 119 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.FloorPlanSettings.RightIO2Core));
            
            #line default
            #line hidden
            this.Write(" \\\r\n    -top_io2core       ");
            
            #line 120 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.FloorPlanSettings.TopIO2Core));
            
            #line default
            #line hidden
            this.Write(" \\\r\n    -core_aspect_ratio ");
            
            #line 121 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.FloorPlanSettings.AspectRatio));
            
            #line default
            #line hidden
            this.Write(" \\\r\n    -core_utilization  ");
            
            #line 122 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.FloorPlanSettings.CoreUtilization));
            
            #line default
            #line hidden
            this.Write(" \\\r\n    -start_first_row\r\n");
            
            #line 124 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"

        break;
    case FloorPlanType.WidthHeightAuto:
    case FloorPlanType.WidthHeight:

            
            #line default
            #line hidden
            this.Write("create_floorplan \\\r\n    -control_type width_and_height \\\r\n    -left_io2core      " +
                    "");
            
            #line 131 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.FloorPlanSettings.LeftIO2Core));
            
            #line default
            #line hidden
            this.Write(" \\\r\n    -bottom_io2core    ");
            
            #line 132 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.FloorPlanSettings.BottomIO2Core));
            
            #line default
            #line hidden
            this.Write(" \\\r\n    -right_io2core     ");
            
            #line 133 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.FloorPlanSettings.RightIO2Core));
            
            #line default
            #line hidden
            this.Write(" \\\r\n    -top_io2core       ");
            
            #line 134 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.FloorPlanSettings.TopIO2Core));
            
            #line default
            #line hidden
            this.Write(" \\\r\n    -core_width        ");
            
            #line 135 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.FloorPlanSettings.CoreWidth));
            
            #line default
            #line hidden
            this.Write(" \\\r\n    -core_height       ");
            
            #line 136 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.FloorPlanSettings.CoreHeight));
            
            #line default
            #line hidden
            this.Write(" \\\r\n    -core_utilization  ");
            
            #line 137 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.FloorPlanSettings.CoreUtilization));
            
            #line default
            #line hidden
            this.Write(" \\\r\n    -start_first_row\r\n");
            
            #line 139 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"

        break;
    default:
        break;
}

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 146 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(model.MacroPlaceSettings.Count != 0) { 
            
            #line default
            #line hidden
            
            #line 147 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var macroPlace in model.MacroPlaceSettings) { 
var x1 = macroPlace.X;
var y1 = macroPlace.Y;
var x2 = macroPlace.X + macroPlace.Width;
var y2 = macroPlace.Y + macroPlace.Height;
var x2_ = macroPlace.X + macroPlace.Height;
var y2_ = macroPlace.Y + macroPlace.Width;

            
            #line default
            #line hidden
            this.Write("# 设置Macro摆放\r\nset_undoable_attribute [get_cells \"");
            
            #line 156 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(macroPlace.Name.ToUpper()));
            
            #line default
            #line hidden
            this.Write("\"] orientation {");
            
            #line 156 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(macroPlace.Orientation.ToString()));
            
            #line default
            #line hidden
            this.Write("}\r\nmove_objects -x ");
            
            #line 157 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(x1));
            
            #line default
            #line hidden
            this.Write(" -y ");
            
            #line 157 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(y1));
            
            #line default
            #line hidden
            this.Write(" [get_cells \"");
            
            #line 157 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(macroPlace.Name.ToUpper()));
            
            #line default
            #line hidden
            this.Write("\"]\r\n");
            
            #line 158 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 
double p_x1 = 0;
double p_y1 = 0;
double p_x2 = 0;
double p_y2 = 0;
if(macroPlace.Orientation == Orientation.E || macroPlace.Orientation == Orientation.W) { 
    p_x1 = x1 - macroPlace.MarginLeft;
    p_y1 = y1 - macroPlace.MarginBottom;
    p_x2 = x2_ + macroPlace.MarginRight;
    p_y2 = y2_ + macroPlace.MarginTop;
} else { 
    p_x1 = x1 - macroPlace.MarginLeft;
    p_y1 = y1 - macroPlace.MarginBottom;
    p_x2 = x2 + macroPlace.MarginRight;
    p_y2 = y2 + macroPlace.MarginTop;
} 
            
            #line default
            #line hidden
            this.Write("create_placement_blockage -bbox {");
            
            #line 174 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(p_x1));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 174 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(p_y1));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 174 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(p_x2));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 174 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(p_y2));
            
            #line default
            #line hidden
            this.Write("} -type hard\r\n");
            
            #line 175 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(macroPlace.ReverseRoutingDirection) { 
            
            #line default
            #line hidden
            this.Write("create_route_guide -name route_guide_");
            
            #line 176 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(macroPlace.Name.ToUpper().Replace("/", "_")));
            
            #line default
            #line hidden
            this.Write(" -coordinate {{");
            
            #line 176 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(p_x1));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 176 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(p_y1));
            
            #line default
            #line hidden
            this.Write("} {");
            
            #line 176 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(p_x2));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 176 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(p_y2));
            
            #line default
            #line hidden
            this.Write("}} -switch_preferred_direction_layers \"");
            
            #line 176 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(" ", Enumerable.Range(3,model.MaxRoutingLayer-2).Select(s => "M"+s))));
            
            #line default
            #line hidden
            this.Write("\"\r\n");
            
            #line 177 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 178 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 179 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 
var macroPowerPins = model.MacroPlaceSettings.SelectMany(x => x.PowerPins).Distinct();
var macroGroundPins = model.MacroPlaceSettings.SelectMany(x => x.GroundPins).Distinct();

            
            #line default
            #line hidden
            this.Write("# 连接Macro电源\r\n");
            
            #line 184 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var pPin in macroPowerPins) { 
            
            #line default
            #line hidden
            this.Write("derive_pg_connection -power_net \"VDD\" -power_pin ");
            
            #line 185 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pPin));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 186 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 187 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var gPin in macroGroundPins) { 
            
            #line default
            #line hidden
            this.Write("derive_pg_connection -ground_net \"VSS\" -ground_pin ");
            
            #line 188 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(gPin));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 189 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\nset_dont_touch_placement [all_macro_cells]\r\n");
            
            #line 192 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 194 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(model.CapCells != null && model.CapCells.Length != 0) { 
            
            #line default
            #line hidden
            
            #line 195 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 var cap_lib_cells = model.CapCells.Select(c => "$lib_name/" + c).ToList(); 
            
            #line default
            #line hidden
            this.Write("# 使用最小号CapCell\r\nadd_end_cap -respect_blockage -lib_cell \"");
            
            #line 197 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cap_lib_cells[0]));
            
            #line default
            #line hidden
            this.Write("\"\r\n");
            
            #line 198 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write(@"
if {[check_error -verbose] != 0} { exit 2 }
save_mw_cel -design $top_name -as ""$top_name\_die_init""

gui_zoom -window [gui_get_current_window -types Layout -mru] -full
gui_execute_events

#====================optimization_settings============
set_delay_calculation_options -arnoldi_effort high
set_host_options -max_core ");
            
            #line 208 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Cores));
            
            #line default
            #line hidden
            this.Write(@"
# 关闭Router独立进程
set_app_var physopt_enable_router_process false 
set_app_var timing_enable_multiple_clocks_per_reg false
set_fix_multiple_port_nets -all -buffer_constants
set_auto_disable_drc_nets -constant false
# Optinal: add dont use cells

#====================placement_settings============
set MIN_ROUTING_LAYER ""[get_layer_attribute -layer metal2 name]""
set MAX_ROUTING_LAYER ""[get_layer_attribute -layer metal");
            
            #line 218 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.MaxRoutingLayer));
            
            #line default
            #line hidden
            this.Write(@" name]""
set_ignored_layers -max_routing_layer $MAX_ROUTING_LAYER
set_ignored_layers -min_routing_layer $MIN_ROUTING_LAYER

set_pnet_options -complete {M1 M2} -see_object {all_types}
set_pnet_options -partial {M3 M4 M5 M6}
report_pnet_options
set physopt_new_fix_constants true
set_buffer_opt_strategy -effort high

");
            
            #line 228 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(model.StdCell.cdk_name.StartsWith("scc")) { 
            
            #line default
            #line hidden
            this.Write("set TIE_CELLS \"");
            
            #line 229 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture($"$lib_name/{model.TieHighCell} $lib_name/{model.TieLowCell}"));
            
            #line default
            #line hidden
            this.Write("\"\r\nset_attribute $TIE_CELLS max_fanout 1\r\nset_attribute $TIE_CELLS max_capacitanc" +
                    "e 0.2 -type float\r\nremove_attribute $TIE_CELLS dont_use\r\nremove_attribute $TIE_C" +
                    "ELLS dont_touch\r\n");
            
            #line 234 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write(@"
set_fp_placement_strategy -sliver_size 10 -virtual_IPO on \
    -macros_on_edge on \
    -fix_macros all

set_app_var physopt_hard_keepout_distance 10
set placer_soft_keepout_channel_width 10

set_app_var derive_pg_preserve_floating_tieoff false

#====================cts_settings============

define_routing_rule iccrm_clock_double_spacing -default_reference_rule -multiplier_spacing 2 -multiplier_width 2
report_routing_rule iccrm_clock_double_spacing
set_clock_tree_options -routing_rule iccrm_clock_double_spacing -use_default_routing_for_sinks 1

#Optional: clock shielding NDR

set_clock_tree_options -layer_list """);
            
            #line 253 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(" ", Enumerable.Range(3, model.MaxRoutingLayer - 2).Select(i => "M"+i))));
            
            #line default
            #line hidden
            this.Write("\" ;# typically route clocks on metal3 and above\r\n\r\n#====================post_cts_" +
                    "settings============\r\n");
            
            #line 256 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(model.DelayCells != null && model.DelayCells.Length != 0) {
    var delay_cells_str = string.Join(" ", model.DelayCells.Select(c => "$lib_name/" + c));

            
            #line default
            #line hidden
            this.Write("set ICC_FIX_HOLD_PREFER_CELLS \"");
            
            #line 259 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(delay_cells_str));
            
            #line default
            #line hidden
            this.Write("\"\r\nremove_attribute [get_lib_cells $ICC_FIX_HOLD_PREFER_CELLS] dont_touch\r\nset_pr" +
                    "efer -min [get_lib_cells $ICC_FIX_HOLD_PREFER_CELLS]\r\nset_fix_hold_options -pref" +
                    "erred_buffer\r\n");
            
            #line 263 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write(@"
#====================route_si_settings============

set_si_options -delta_delay true \
    -route_xtalk_prevention true \
    -route_xtalk_prevention_threshold 0.25 \
    -analysis_effort medium

set_si_options -min_delta_delay true

set_route_opt_strategy -search_repair_loops 40
set_route_opt_strategy -eco_route_search_repair_loops 10

set_app_var routeopt_skip_report_qor true

set_route_zrt_detail_options -antenna true

");
            
            #line 281 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(model.Library.StartsWith("HL")) { 
            
            #line default
            #line hidden
            this.Write(@"# set_preferred_routing_direction -layer metal1 -direction horizontal
# set_preferred_routing_direction -layer metal2 -direction vertical
# set_preferred_routing_direction -layer metal3 -direction horizontal
# set_preferred_routing_direction -layer metal4 -direction vertical
# set_preferred_routing_direction -layer metal5 -direction horizontal
# set_preferred_routing_direction -layer metal6 -direction vertical
# set_preferred_routing_direction -layer metal7 -direction horizontal

set_route_zrt_common_options -connect_within_pins {{M1 via_wire_standard_cell_pins}}
");
            
            #line 291 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write(@"
#====================2. place_opt=====================

set_app_var compile_instance_name_prefix place_opt
check_mv_design -verbose

create_fp_placement -timing_driven -no_hierarchy_gravity
derive_pg_connection -power_net ""VDD"" -power_pin $power_name -ground_net ""VSS"" -ground_pin $ground_name
");
            
            #line 300 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(model.MacroPlaceSettings.Count != 0) { 
            
            #line default
            #line hidden
            
            #line 301 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 
var macroPowerPins = model.MacroPlaceSettings.SelectMany(x => x.PowerPins).Distinct();
var macroGroundPins = model.MacroPlaceSettings.SelectMany(x => x.GroundPins).Distinct();

            
            #line default
            #line hidden
            this.Write("# 连接Macro电源\r\n");
            
            #line 306 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var pPin in macroPowerPins) { 
            
            #line default
            #line hidden
            this.Write("derive_pg_connection -power_net \"VDD\" -power_pin ");
            
            #line 307 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pPin));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 308 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 309 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var gPin in macroGroundPins) { 
            
            #line default
            #line hidden
            this.Write("derive_pg_connection -ground_net \"VSS\" -ground_pin ");
            
            #line 310 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(gPin));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 311 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 312 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write("#derive_pg_connection -power_net \"VDD\" -ground_net \"VSS\" -tie\r\n\r\ncreate_rectiline" +
                    "ar_rings -nets { \"VDD\" \"VSS\" } -offset { ");
            
            #line 315 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.HorizontalOffset));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 315 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.VerticalOffset));
            
            #line default
            #line hidden
            this.Write(" } -width { ");
            
            #line 315 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.PowerWidth));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 315 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.GroundWidth));
            
            #line default
            #line hidden
            this.Write(" } -space { ");
            
            #line 315 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.VerticalSpace));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 315 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.HorizontalSpace));
            
            #line default
            #line hidden
            this.Write(" }\r\n\r\n");
            
            #line 317 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(model.MacroPlaceSettings.Count != 0) { 
            
            #line default
            #line hidden
            
            #line 318 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var macroPlace in model.MacroPlaceSettings) { 
            
            #line default
            #line hidden
            
            #line 319 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(macroPlace.CreateRing) { 
var hoffset = macroPlace.MarginLeft - 5.4;
var voffset = macroPlace.MarginTop - 5.4;

            
            #line default
            #line hidden
            this.Write("create_rectilinear_rings -around macro -macro_cells {");
            
            #line 323 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(macroPlace.Name.ToUpper()));
            
            #line default
            #line hidden
            this.Write("} -nets { \"VDD\" \"VSS\" } -width { 2 2 } -space { 0.4 0.4 } -offset { ");
            
            #line 323 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(hoffset));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 323 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(voffset));
            
            #line default
            #line hidden
            this.Write(" }\r\n");
            
            #line 324 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } } } 
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 326 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(model.FloorPlanSettings.FloorPlanType == FloorPlanType.WidthHeight || model.FloorPlanSettings.FloorPlanType == FloorPlanType.WidthHeightAuto) { 
var width = model.FloorPlanSettings.CoreWidth;
var height = model.FloorPlanSettings.CoreHeight;
var layer = 5; 
if(model.MaxPreRouteLayer % 2 == 0) { //最高层为偶数
    layer = model.MaxPreRouteLayer - 1; //奇数
    if(model.M1RoutingDirection == "horizontal") {
        layer = model.MaxPreRouteLayer; //偶数
    }
} else { //最高层为奇数
    layer = model.MaxPreRouteLayer; //奇数
    if(model.M1RoutingDirection == "horizontal") {
        layer = model.MaxPreRouteLayer - 1; //偶数
    }
}

            
            #line default
            #line hidden
            
            #line 342 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(model.CreatePowerStrap) { 
            
            #line default
            #line hidden
            this.Write("# 电源网格\r\ncreate_power_straps -direction vertical -start_at ");
            
            #line 344 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.PowerStrapStart));
            
            #line default
            #line hidden
            this.Write(" -nets {VSS VDD} -layer M");
            
            #line 344 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(layer));
            
            #line default
            #line hidden
            this.Write(" -width 2 -configure step_and_stop -step ");
            
            #line 344 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.PowerStrapStep));
            
            #line default
            #line hidden
            this.Write(" -stop ");
            
            #line 344 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(width));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 345 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 346 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\nadd_tap_cell_array -master_cell_name ");
            
            #line 348 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.TapCell));
            
            #line default
            #line hidden
            this.Write(" -distance 20 -pattern normal -connect_power_name \"VDD\" -connect_ground_name \"VSS" +
                    "\"\r\nderive_pg_connection -power_net \"VDD\" -power_pin $power_name -ground_net \"VSS" +
                    "\" -ground_pin $ground_name\r\n");
            
            #line 350 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(model.MacroPlaceSettings.Count != 0) { 
            
            #line default
            #line hidden
            
            #line 351 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 
var macroPowerPins = model.MacroPlaceSettings.SelectMany(x => x.PowerPins).Distinct();
var macroGroundPins = model.MacroPlaceSettings.SelectMany(x => x.GroundPins).Distinct();

            
            #line default
            #line hidden
            this.Write("# 连接Macro电源\r\n");
            
            #line 356 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var pPin in macroPowerPins) { 
            
            #line default
            #line hidden
            this.Write("derive_pg_connection -power_net \"VDD\" -power_pin ");
            
            #line 357 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pPin));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 358 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 359 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var gPin in macroGroundPins) { 
            
            #line default
            #line hidden
            this.Write("derive_pg_connection -ground_net \"VSS\" -ground_pin ");
            
            #line 360 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(gPin));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 361 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 362 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write("#derive_pg_connection -power_net \"VDD\" -ground_net \"VSS\" -tie\r\n\r\ngui_zoom -window" +
                    " [gui_get_current_window -types Layout -mru] -full\r\ngui_execute_events\r\n\r\nsave_m" +
                    "w_cel -design $top_name -as \"$top_name\\_power_ring\"\r\n\r\nset_preroute_drc_strategy" +
                    " -max_layer M");
            
            #line 370 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.MaxPreRouteLayer));
            
            #line default
            #line hidden
            this.Write("\r\npreroute_instances -preferred_routing_layer low\r\n\r\n");
            
            #line 373 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(model.PowerRailLayer == 2) { 
            
            #line default
            #line hidden
            this.Write("# 避免电源网格通孔经过M1\r\n");
            
            #line 375 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(model.Library.StartsWith("HL")) { 
            
            #line default
            #line hidden
            this.Write("preroute_standard_cells -fill_empty_rows -do_not_route_over_macros -route_pins_on" +
                    "_layer M2 -skip_macro_pins\r\n");
            
            #line 377 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("preroute_standard_cells -fill_empty_rows -do_not_route_over_macros -route_pins_on" +
                    "_layer M2 -remove_floating_pieces -skip_macro_pins -cut_out_empty_spans\r\n");
            
            #line 379 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 380 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 381 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(model.Library.StartsWith("HL")) { 
            
            #line default
            #line hidden
            this.Write("preroute_standard_cells -fill_empty_rows -do_not_route_over_macros -skip_macro_pi" +
                    "ns\r\n");
            
            #line 383 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("preroute_standard_cells -fill_empty_rows -do_not_route_over_macros -remove_floati" +
                    "ng_pieces -skip_macro_pins -cut_out_empty_spans\r\n");
            
            #line 385 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 386 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\nset r [place_opt -area_recovery -effort medium -congestion -power -continue_on_" +
                    "missing_scandef]\r\nif { $r == 0 } {\r\n    exit 3\r\n}\r\n\r\n");
            
            #line 393 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(model.Library.StartsWith("SMIC40LL")) { 
            
            #line default
            #line hidden
            this.Write("# connect_tie_cells -max_wirelength 50 -tie_high_lib_cell ");
            
            #line 394 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.TieHighCell));
            
            #line default
            #line hidden
            this.Write(" -tie_low_lib_cell ");
            
            #line 394 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.TieLowCell));
            
            #line default
            #line hidden
            this.Write(" -max_fanout 5 -obj_type cell_inst -objects [get_cells -hier *]\r\n");
            
            #line 395 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\nderive_pg_connection -power_net \"VDD\" -power_pin $power_name -ground_net \"VSS\" " +
                    "-ground_pin $ground_name\r\n");
            
            #line 398 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(model.MacroPlaceSettings.Count != 0) { 
            
            #line default
            #line hidden
            
            #line 399 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 
var macroPowerPins = model.MacroPlaceSettings.SelectMany(x => x.PowerPins).Distinct();
var macroGroundPins = model.MacroPlaceSettings.SelectMany(x => x.GroundPins).Distinct();

            
            #line default
            #line hidden
            this.Write("# 连接Macro电源\r\n");
            
            #line 404 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var pPin in macroPowerPins) { 
            
            #line default
            #line hidden
            this.Write("derive_pg_connection -power_net \"VDD\" -power_pin ");
            
            #line 405 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pPin));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 406 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 407 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var gPin in macroGroundPins) { 
            
            #line default
            #line hidden
            this.Write("derive_pg_connection -ground_net \"VSS\" -ground_pin ");
            
            #line 408 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(gPin));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 409 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 410 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write(@"derive_pg_connection -power_net ""VDD"" -ground_net ""VSS"" -tie

if {[check_error -verbose] != 0} { exit 3 }
save_mw_cel -design $top_name -as ""$top_name\_place_opt""

gui_zoom -window [gui_get_current_window -types Layout -mru] -full
gui_execute_events

#====================3. clock_opt_cts=====================

set_app_var cts_instance_name_prefix CTS
check_mv_design -verbose
psynopt
clock_opt -only_cts -no_clock_route -continue_on_missing_scandef -update_clock_latency

derive_pg_connection -power_net ""VDD"" -power_pin $power_name -ground_net ""VSS"" -ground_pin $ground_name
");
            
            #line 427 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(model.MacroPlaceSettings.Count != 0) { 
            
            #line default
            #line hidden
            
            #line 428 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 
var macroPowerPins = model.MacroPlaceSettings.SelectMany(x => x.PowerPins).Distinct();
var macroGroundPins = model.MacroPlaceSettings.SelectMany(x => x.GroundPins).Distinct();

            
            #line default
            #line hidden
            this.Write("# 连接Macro电源\r\n");
            
            #line 433 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var pPin in macroPowerPins) { 
            
            #line default
            #line hidden
            this.Write("derive_pg_connection -power_net \"VDD\" -power_pin ");
            
            #line 434 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pPin));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 435 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 436 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var gPin in macroGroundPins) { 
            
            #line default
            #line hidden
            this.Write("derive_pg_connection -ground_net \"VSS\" -ground_pin ");
            
            #line 437 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(gPin));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 438 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 439 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write(@"derive_pg_connection -power_net ""VDD"" -ground_net ""VSS"" -tie

remove_ideal_network [all_fanout -flat -clock_tree]
set_fix_hold [all_clocks]

if {[check_error -verbose] != 0} { exit 4 }
save_mw_cel -design $top_name -as ""$top_name\_clock_opt_cts""

gui_zoom -window [gui_get_current_window -types Layout -mru] -full
gui_execute_events

#====================4. clock_opt_psyn=====================

set_app_var compile_instance_name_prefix clock_opt_psyn

clock_opt -no_clock_route -only_psyn -area_recovery -congestion -continue_on_missing_scandef 

set_app_var compile_instance_name_prefix clock_route

route_zrt_group -all_clock_nets -reuse_existing_global_route true -stop_after_global_route true

# Antenna prevention
");
            
            #line 462 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(model.AntennaCells != null && model.AntennaCells.Length != 0) {
    var diode_cells_str = string.Join(" ", model.AntennaCells.Select(c => "$lib_name/" + c));

            
            #line default
            #line hidden
            this.Write("set ICC_PORT_PROTECTION_DIODE \"");
            
            #line 465 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(diode_cells_str));
            
            #line default
            #line hidden
            this.Write(@"""
remove_attribute $ICC_PORT_PROTECTION_DIODE dont_use
set ports [get_ports * -filter ""direction==in""]
# insert_port_protection_diodes -prefix port_protection_diode -diode_cell [get_lib_cells $ICC_PORT_PROTECTION_DIODE] -port $ports -ignore_dont_touch
");
            
            #line 469 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write("legalize_placement\r\n\r\nderive_pg_connection -power_net \"VDD\" -power_pin $power_nam" +
                    "e -ground_net \"VSS\" -ground_pin $ground_name\r\n");
            
            #line 473 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(model.MacroPlaceSettings.Count != 0) { 
            
            #line default
            #line hidden
            
            #line 474 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 
var macroPowerPins = model.MacroPlaceSettings.SelectMany(x => x.PowerPins).Distinct();
var macroGroundPins = model.MacroPlaceSettings.SelectMany(x => x.GroundPins).Distinct();

            
            #line default
            #line hidden
            this.Write("# 连接Macro电源\r\n");
            
            #line 479 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var pPin in macroPowerPins) { 
            
            #line default
            #line hidden
            this.Write("derive_pg_connection -power_net \"VDD\" -power_pin ");
            
            #line 480 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pPin));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 481 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 482 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var gPin in macroGroundPins) { 
            
            #line default
            #line hidden
            this.Write("derive_pg_connection -ground_net \"VSS\" -ground_pin ");
            
            #line 483 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(gPin));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 484 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 485 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write(@"derive_pg_connection -power_net ""VDD"" -ground_net ""VSS"" -tie

if {[check_error -verbose] != 0} { exit 5 }
save_mw_cel -design $top_name -as ""$top_name\_clock_opt_psyn""

gui_zoom -window [gui_get_current_window -types Layout -mru] -full
gui_execute_events

#====================5. clock_opt_route=====================

source -echo ");
            
            #line 496 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Antenna));
            
            #line default
            #line hidden
            this.Write(@"

set_si_options -delta_delay false -min_delta_delay false -route_xtalk_prevention false

route_zrt_group -all_clock_nets -reuse_existing_global_route true
optimize_clock_tree -routed_clock_stage detail 

derive_pg_connection -power_net ""VDD"" -power_pin $power_name -ground_net ""VSS"" -ground_pin $ground_name
");
            
            #line 504 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(model.MacroPlaceSettings.Count != 0) { 
            
            #line default
            #line hidden
            
            #line 505 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 
var macroPowerPins = model.MacroPlaceSettings.SelectMany(x => x.PowerPins).Distinct();
var macroGroundPins = model.MacroPlaceSettings.SelectMany(x => x.GroundPins).Distinct();

            
            #line default
            #line hidden
            this.Write("# 连接Macro电源\r\n");
            
            #line 510 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var pPin in macroPowerPins) { 
            
            #line default
            #line hidden
            this.Write("derive_pg_connection -power_net \"VDD\" -power_pin ");
            
            #line 511 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pPin));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 512 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 513 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var gPin in macroGroundPins) { 
            
            #line default
            #line hidden
            this.Write("derive_pg_connection -ground_net \"VSS\" -ground_pin ");
            
            #line 514 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(gPin));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 515 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 516 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write(@"derive_pg_connection -power_net ""VDD"" -ground_net ""VSS"" -tie

if {[check_error -verbose] != 0} { exit 6 }
save_mw_cel -design $top_name -as ""$top_name\_clock_opt_route""

gui_zoom -window [gui_get_current_window -types Layout -mru] -full
gui_execute_events

#====================6. route=====================

set_si_options -delta_delay true \
    -route_xtalk_prevention true \
    -route_xtalk_prevention_threshold 0.25 \
    -analysis_effort medium

set_si_options -min_delta_delay true

## pre route_opt checks
set num_ideal [sizeof_collection [all_ideal_nets]]
if {$num_ideal >= 1} {echo ""RM-Error: $num_ideal Nets are ideal prior to route_opt. Please investigate it.""}

set_route_zrt_common_options -post_detail_route_redundant_via_insertion medium
set_route_zrt_detail_options -optimize_wire_via_effort_level high

report_preferred_routing_direction
check_routeability

route_opt -initial_route_only
if {[check_error -verbose] != 0} { exit 7 }

update_clock_latency
derive_pg_connection -power_net ""VDD"" -power_pin $power_name -ground_net ""VSS"" -ground_pin $ground_name
");
            
            #line 549 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(model.MacroPlaceSettings.Count != 0) { 
            
            #line default
            #line hidden
            
            #line 550 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 
var macroPowerPins = model.MacroPlaceSettings.SelectMany(x => x.PowerPins).Distinct();
var macroGroundPins = model.MacroPlaceSettings.SelectMany(x => x.GroundPins).Distinct();

            
            #line default
            #line hidden
            this.Write("# 连接Macro电源\r\n");
            
            #line 555 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var pPin in macroPowerPins) { 
            
            #line default
            #line hidden
            this.Write("derive_pg_connection -power_net \"VDD\" -power_pin ");
            
            #line 556 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pPin));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 557 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 558 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var gPin in macroGroundPins) { 
            
            #line default
            #line hidden
            this.Write("derive_pg_connection -ground_net \"VSS\" -ground_pin ");
            
            #line 559 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(gPin));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 560 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 561 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write(@"derive_pg_connection -power_net ""VDD"" -ground_net ""VSS"" -tie

save_mw_cel -design $top_name -as ""$top_name\_route""

gui_zoom -window [gui_get_current_window -types Layout -mru] -full
gui_execute_events

#====================7. route_opt=====================

set_app_var compile_instance_name_prefix route_opt
update_timing

set_app_var routeopt_allow_min_buffer_with_size_only true

route_opt -skip_initial_route -effort medium -xtalk_reduction
route_opt -incremental 
route_opt -incremental -size_only

derive_pg_connection -power_net ""VDD"" -power_pin $power_name -ground_net ""VSS"" -ground_pin $ground_name
");
            
            #line 581 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(model.MacroPlaceSettings.Count != 0) { 
            
            #line default
            #line hidden
            
            #line 582 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 
var macroPowerPins = model.MacroPlaceSettings.SelectMany(x => x.PowerPins).Distinct();
var macroGroundPins = model.MacroPlaceSettings.SelectMany(x => x.GroundPins).Distinct();

            
            #line default
            #line hidden
            this.Write("# 连接Macro电源\r\n");
            
            #line 587 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var pPin in macroPowerPins) { 
            
            #line default
            #line hidden
            this.Write("derive_pg_connection -power_net \"VDD\" -power_pin ");
            
            #line 588 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pPin));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 589 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 590 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var gPin in macroGroundPins) { 
            
            #line default
            #line hidden
            this.Write("derive_pg_connection -ground_net \"VSS\" -ground_pin ");
            
            #line 591 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(gPin));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 592 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 593 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write(@"derive_pg_connection -power_net ""VDD"" -ground_net ""VSS"" -tie

if {[check_error -verbose] != 0} { exit 8 }
save_mw_cel -design $top_name -as ""$top_name\_route_opt""

gui_zoom -window [gui_get_current_window -types Layout -mru] -full
gui_execute_events

#====================7. chip_finish=====================
set_app_var compile_instance_name_prefix route_finish

set_route_zrt_detail_options -eco_route_use_soft_spacing_for_timing_optimization false

#spread_zrt_wires -timing_preserve_hold_slack_threshold 0 -timing_preserve_setup_slack_threshold 0.1
#widen_zrt_wires -timing_preserve_hold_slack_threshold 0 -timing_preserve_setup_slack_threshold 0.1

set_route_zrt_detail_options -antenna true -diode_libcell_names """);
            
            #line 610 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(" ", model.AntennaCells)));
            
            #line default
            #line hidden
            this.Write("\" -insert_diodes_during_routing true\r\nroute_zrt_detail -incremental true\r\n\r\ninser" +
                    "t_stdcell_filler -cell_without_metal \"");
            
            #line 613 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(" ", model.Filler)));
            
            #line default
            #line hidden
            this.Write("\"\r\n\r\nderive_pg_connection -power_net \"VDD\" -power_pin $power_name -ground_net \"VS" +
                    "S\" -ground_pin $ground_name\r\n");
            
            #line 616 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(model.MacroPlaceSettings.Count != 0) { 
            
            #line default
            #line hidden
            
            #line 617 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 
var macroPowerPins = model.MacroPlaceSettings.SelectMany(x => x.PowerPins).Distinct();
var macroGroundPins = model.MacroPlaceSettings.SelectMany(x => x.GroundPins).Distinct();

            
            #line default
            #line hidden
            this.Write("# 连接Macro电源\r\n");
            
            #line 622 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var pPin in macroPowerPins) { 
            
            #line default
            #line hidden
            this.Write("derive_pg_connection -power_net \"VDD\" -power_pin ");
            
            #line 623 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pPin));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 624 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 625 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 foreach(var gPin in macroGroundPins) { 
            
            #line default
            #line hidden
            this.Write("derive_pg_connection -ground_net \"VSS\" -ground_pin ");
            
            #line 626 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(gPin));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 627 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            
            #line 628 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write("derive_pg_connection -power_net \"VDD\" -ground_net \"VSS\" -tie\r\n\r\n## Final Route cl" +
                    "ean-up - if needed:\r\n## During minor cleanup, best to turn off ZRoute timing\r\n##" +
                    " options to avoid extraction/timing hits\r\nset_route_zrt_global_options -timing_d" +
                    "riven false -crosstalk_driven false\r\nset_route_zrt_track_options -timing_driven " +
                    "false -crosstalk_driven false\r\nset_route_zrt_detail_options -timing_driven false" +
                    "\r\n\r\nroute_zrt_eco\r\n\r\nif {[check_error -verbose] != 0} { exit 9 }\r\nsave_mw_cel -d" +
                    "esign $top_name -as \"$top_name\\_chip_finish\"\r\n\r\ngui_zoom -window [gui_get_curren" +
                    "t_window -types Layout -mru] -full\r\ngui_execute_events\r\n\r\n#====================G" +
                    "DS标签=====================\r\n\r\n#set routing_direction [report_preferred_routing_di" +
                    "rection]\r\n\r\nset ports [get_ports *]\r\nforeach_in_collection p $ports {\r\n    set x" +
                    "y_location [get_location $p]\r\n    set x_location  [lindex $xy_location 0]\r\n    s" +
                    "et y_location  [lindex $xy_location 1]\r\n    set name [collection_to_list $p]\r\n  " +
                    "  set name_1 [string range $name 7 end-2]\r\n    set layer [string range [get_attr" +
                    "ibute $p layer] 1 end]\r\n    set mntxt_layer [dict get $MnTXTs $layer]\r\n\r\n    cre" +
                    "ate_text -height 0.05 -layer $mntxt_layer -origin [list [expr $x_location] [expr" +
                    " $y_location]] -orient W $name_1\r\n}\r\n\r\nsave_mw_cel -design $top_name -as \"$top_n" +
                    "ame\\_gds_label\"\r\n\r\n#====================输出=====================\r\n\r\nverify_pg_net" +
                    "s\r\nverify_lvs > $rpt_path/$top_name\\_lvs.rpt\r\n\r\nreport_placement_utilization > $" +
                    "rpt_path/$top_name\\_placement\\_utilization.rpt\r\n\r\ndefine_name_rules \"IS_rule\" -m" +
                    "ax_length \"255\" -allowed \"A-Z0-9_$\"  -replacement_char \"_\" -type cell\r\ndefine_na" +
                    "me_rules \"IS_rule\" -max_length \"255\" -allowed \"A-Z0-9_$\"  -replacement_char \"_\" " +
                    "-type net\r\ndefine_name_rules \"IS_rule\" -max_length \"255\" -allowed \"A-Z0-9_$[]\"  " +
                    "-replacement_char \"_\" -type port\r\nchange_names -rules \"IS_rule\" -hierarchy\r\n\r\nsa" +
                    "ve_mw_cel -as $top_name\r\n\r\nreport_timing -delay_type max -max_path 20 > $rpt_pat" +
                    "h/$top_name\\_timing\\_dfm_max.rpt\r\nreport_timing -delay_type min -max_path 20 > $" +
                    "rpt_path/$top_name\\_timing\\_dfm_min.rpt\r\n\r\n");
            
            #line 682 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(string.IsNullOrEmpty(model.GDSLayerMap)) { 
            
            #line default
            #line hidden
            this.Write("set_write_stream_options -output_pin  { geometry }\r\n");
            
            #line 684 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("set_write_stream_options -output_pin  { geometry } -map_layer ");
            
            #line 685 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.GDSLayerMap));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 686 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write(@"#set_write_stream_options -output_pin text
#set_write_stream_options -output_pin geometry

write_verilog -no_core_filler_cells -no_tap_cells             $net_path/$top_name\.v
write_verilog -no_tap_cells                                   $net_path/$top_name\_filler.v
write_verilog -no_core_filler_cells                           $net_path/$top_name\_tap.v
write_verilog                                                 $net_path/$top_name\_all.v
");
            
            #line 694 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 if(model.Library.StartsWith("SMIC")) { 
            
            #line default
            #line hidden
            this.Write("write_verilog -no_tap_cells                                   $net_path/$top_name" +
                    "\\_cds.v\r\n");
            
            #line 696 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } else if(model.Library.StartsWith("TSMC")) { 
            
            #line default
            #line hidden
            this.Write("write_verilog -no_tap_cells                                   $net_path/$top_name" +
                    "\\_cds.v\r\n");
            
            #line 698 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } else if(model.Library.StartsWith("HL")) { 
            
            #line default
            #line hidden
            this.Write("write_verilog                                                 $net_path/$top_name" +
                    "\\_cds.v\r\n");
            
            #line 700 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("write_verilog -no_tap_cells                                   $net_path/$top_name" +
                    "\\_cds.v\r\n");
            
            #line 702 "E:\Documents\Repo\Harbor2\Harbor.Core\Tool\APR\Tcl\ICCBuildTcl.tt"
 } 
            
            #line default
            #line hidden
            this.Write(@"write_stream -format gds -lib_name $top_name -cells $top_name $gds_path/$top_name\.gds
write_sdf -version 2.1                                        $net_path/$top_name\.sdf
write_parasitics -output                                      $net_path/$top_name\.spef
write_def -pins -output                                       $net_path/$top_name\.def

write_floorplan -all                                          $net_path/$top_name\_floorplan.tcl

gui_write_window_image -window [gui_get_current_window -types Layout -mru] -file $rpt_path/$top_name\.png

save_mw_cel -design $top_name
quit");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public class ICCBuildTclBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
