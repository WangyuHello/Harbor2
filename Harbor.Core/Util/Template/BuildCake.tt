<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
var target = Argument("target", "BuildAll");
var floorPlanOnly = Argument("floorplan", false);

Task("Synthesis")
    .Does(() =>
{
    Syn(_ => _
        .Verilog("./Source/**/*.v")
<# if(!string.IsNullOrEmpty(ClockName)) { #>
        .Clock("<#= ClockName #>")
<# } #>
<# if(!string.IsNullOrEmpty(ResetName)) { #>
        .Reset("<#= ResetName #>")
<# } #>
        .ClockPeriod(<#= ClockPeriod #>)
        .AddPG()
    );
});

Task("Layout")
    .Does(() =>
{
    APR(_ => _
        .UseICC()
        .MaxRoutingLayer(routing: 4, preRoute: 6)
        .FloorPlanOnly(floorPlanOnly)
        .FloorPlan(_ => _
            .Type(FloorPlanType.AspectRatio)
            // .Type(FloorPlanType.WidthHeightAuto)
            // .Type(FloorPlanType.WidthHeight)
            .Padding(4,4)
            .CoreUtilization(0.7)
            .HeightWidthRatio(1)
            // .CoreWidth(200)
            // .CoreHeight(200)
            // .Width(200)
            // .Height(200)

            .PowerRing(horizontalWidth: 1, verticalWidth: 1, verticalOffset: 0.5, horizontalOffset: 0.5, verticalSpace: 0.3, horizontalSpace: 0.3)
            // .PowerStrap(start: 20, step: 20, width: 2)
        )
        .Pin(mode: PinPlaceMode.Uniform, _ => _ // 或者 PinPlaceMode.ByOffset
<# if(!string.IsNullOrEmpty(ClockName)) { #>
            .Pin(name: "<#= ClockName #>", position: PortPosition.Top)
<# } #>
        )
        // .Pin(constraint: "./Source/pin_pad.tcl")
        .AddPG()
        .FormalVerify()
        .OpenGUI()
    );
});

Task("Cadence")
    .Does(CreateCadenceProject);

Task("BuildAll")
    .IsDependentOn("Synthesis")
    .IsDependentOn("Layout")
    .IsDependentOn("Cadence");

RunTarget(target);
